@page
@{
    Layout = "~/Views/Shared/Dashboard_Layout.cshtml";
}

<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
<link rel="stylesheet" href="~/css/feedback.css" />
<div class="container">
    <!-- Facility Carousel Section -->
    <section class="facility-carousel-section">
        <h2>Explore Our Facilities</h2>
        <p>Select a facility to learn more</p>
        
        <div class="swiper-container">
            <div class="swiper-wrapper">
                <!-- Facility 1: Function Hall -->
                <div class="swiper-slide facility-card" data-facility-id="1">
                    <div class="facility-image">
                        <img src="~/images/function-hall.jpg" alt="Function Hall">
                        <div class="facility-rating"><span>4.8 ★</span></div>
                    </div>
                    <div class="facility-details">
                        <h3>Function Hall</h3>
                    </div>
                </div>

                <!-- Facility 2: Sports Court -->
                <div class="swiper-slide facility-card" data-facility-id="2">
                    <div class="facility-image">
                        <img src="~/images/sports-court.jpg" alt="Sports Court">
                        <div class="facility-rating"><span>4.6 ★</span></div>
                    </div>
                    <div class="facility-details">
                        <h3>Sports Court</h3>
                    </div>
                </div>

                <!-- Facility 3: Swimming Pool -->
                <div class="swiper-slide facility-card" data-facility-id="3">
                    <div class="facility-image">
                        <img src="~/images/swimming-pool.jpg" alt="Swimming Pool">
                        <div class="facility-rating"><span>4.9 ★</span></div>
                    </div>
                    <div class="facility-details">
                        <h3>Swimming Pool</h3>
                    </div>
                </div>

                <!-- Facility 4: Gym Facility -->
                <div class="swiper-slide facility-card" data-facility-id="4">
                    <div class="facility-image">
                        <img src="~/images/gym.jpg" alt="Gym Facility">
                        <div class="facility-rating"><span>4.7 ★</span></div>
                    </div>
                    <div class="facility-details">
                        <h3>Gym Facility</h3>
                    </div>
                </div>
            </div>
            <div class="swiper-pagination"></div>
        </div>
    </section>

    <!-- Feedback Section -->
    <section class="feedback-section">
        <div class="feedback-header">
            <h1>Customer Feedback</h1>
            <p>Share your experience with <span class="selected-facility">Function Hall</span></p>
        </div>
        
        <!-- Rating Summary -->
        <div class="rating-summary">
            <div class="overall-rating">
                <div class="rating-number">4.8</div>
                <div class="rating-stars">★★★★☆</div>
                <div class="rating-count">124 reviews</div>
            </div>
            
            <div class="rating-details">
                <div class="rating-item">
                    <span class="rating-label">Cleanliness</span>
                    <div class="rating-bar">
                        <div class="bar-fill cleanliness-bar" style="width: 92%;"></div>
                    </div>
                    <span class="rating-value cleanliness-value">4.6</span>
                </div>
                
                <div class="rating-item">
                    <span class="rating-label">Equipment</span>
                    <div class="rating-bar">
                        <div class="bar-fill equipment-bar" style="width: 88%;"></div>
                    </div>
                    <span class="rating-value equipment-value">4.4</span>
                </div>
                
                <div class="rating-item">
                    <span class="rating-label">Staff</span>
                    <div class="rating-bar">
                        <div class="bar-fill staff-bar" style="width: 90%;"></div>
                    </div>
                    <span class="rating-value staff-value">4.5</span>
                </div>
                
                <div class="rating-item">
                    <span class="rating-label">Value</span>
                    <div class="rating-bar">
                        <div class="bar-fill value-bar" style="width: 86%;"></div>
                    </div>
                    <span class="rating-value value-value">4.3</span>
                </div>
            </div>
        </div>
        
        <!-- Feedback Form -->
        <div class="feedback-form">
            <h3>Share Your Experience</h3>
            <form id="feedbackForm">
                <input type="hidden" id="facilityId" value="1">
                
                <div class="form-group">
                    <label>Your Overall Rating</label>
                    <div class="star-rating">
                        <span class="star" data-value="1">★</span>
                        <span class="star" data-value="2">★</span>
                        <span class="star" data-value="3">★</span>
                        <span class="star" data-value="4">★</span>
                        <span class="star" data-value="5">★</span>
                        <input type="hidden" id="overallRating" name="overallRating" required>
                    </div>
                </div>
                
                <div class="form-group">
                    <label>Category Ratings</label>
                    <div class="category-ratings">
                        <div class="category-item">
                            <span>Cleanliness</span>
                            <div class="category-stars">
                                <span class="cat-star" data-category="cleanliness" data-value="1">★</span>
                                <span class="cat-star" data-category="cleanliness" data-value="2">★</span>
                                <span class="cat-star" data-category="cleanliness" data-value="3">★</span>
                                <span class="cat-star" data-category="cleanliness" data-value="4">★</span>
                                <span class="cat-star" data-category="cleanliness" data-value="5">★</span>
                                <input type="hidden" id="cleanlinessRating" name="cleanlinessRating" required>
                            </div>
                        </div>
                        
                        <div class="category-item">
                            <span>Equipment</span>
                            <div class="category-stars">
                                <span class="cat-star" data-category="equipment" data-value="1">★</span>
                                <span class="cat-star" data-category="equipment" data-value="2">★</span>
                                <span class="cat-star" data-category="equipment" data-value="3">★</span>
                                <span class="cat-star" data-category="equipment" data-value="4">★</span>
                                <span class="cat-star" data-category="equipment" data-value="5">★</span>
                                <input type="hidden" id="equipmentRating" name="equipmentRating" required>
                            </div>
                        </div>
                        
                        <div class="category-item">
                            <span>Staff</span>
                            <div class="category-stars">
                                <span class="cat-star" data-category="staff" data-value="1">★</span>
                                <span class="cat-star" data-category="staff" data-value="2">★</span>
                                <span class="cat-star" data-category="staff" data-value="3">★</span>
                                <span class="cat-star" data-category="staff" data-value="4">★</span>
                                <span class="cat-star" data-category="staff" data-value="5">★</span>
                                <input type="hidden" id="staffRating" name="staffRating" required>
                            </div>
                        </div>
                        
                        <div class="category-item">
                            <span>Value</span>
                            <div class="category-stars">
                                <span class="cat-star" data-category="value" data-value="1">★</span>
                                <span class="cat-star" data-category="value" data-value="2">★</span>
                                <span class="cat-star" data-category="value" data-value="3">★</span>
                                <span class="cat-star" data-category="value" data-value="4">★</span>
                                <span class="cat-star" data-category="value" data-value="5">★</span>
                                <input type="hidden" id="valueRating" name="valueRating" required>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="feedback-title">Title</label>
                    <input type="text" id="feedback-title" name="feedbackTitle" placeholder="Summarize your experience" required>
                </div>
                
                <div class="form-group">
                    <label for="feedback-comment">Your Feedback</label>
                    <textarea id="feedback-comment" name="feedbackComment" rows="5" placeholder="Share details of your experience..." required></textarea>
                </div>
                
                <div class="form-group">
                    <label>Add Photos (Optional)</label>
                    <div class="photo-upload">
                        <div class="upload-box" id="uploadTrigger">
                            <span>+</span>
                            <p>Add Photo</p>
                            <input type="file" id="photoUpload" name="feedbackPhotos" accept="image/*" multiple style="display: none;">
                        </div>
                        <div class="upload-preview" id="uploadPreview"></div>
                    </div>
                </div>
                
                <button type="submit" class="submit-button">Submit Feedback</button>
            </form>
        </div>
        
        <!-- Feedback List -->
        <div class="feedback-list">
            <div class="feedback-list-header">
                <h3>Recent Reviews</h3>
                <div class="sort-options">
                    <span>Sort by:</span>
                    <select id="sortReviews">
                        <option value="newest">Newest First</option>
                        <option value="highest">Highest Rating</option>
                        <option value="lowest">Lowest Rating</option>
                    </select>
                </div>
            </div>
            
            <div class="feedback-items-container">
                <!-- Reviews will be loaded dynamically based on selected facility -->
            </div>
            
            <button class="load-more-button">Load More Reviews</button>
        </div>
    </section>
</div>

<!-- Success Modal -->
<div class="modal" id="successModal">
    <div class="modal-content">
        <span class="close-modal">&times;</span>
        <div class="modal-icon success">
            <i class="fas fa-check-circle"></i>
        </div>
        <h3>Thank You!</h3>
        <p>Your feedback has been submitted successfully.</p>
        <button class="modal-button">OK</button>
    </div>
</div>

<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
<script>
// Facility data with ratings and reviews
const facilities = {
    1: { // Function Hall
        name: "Function Hall",
        overallRating: 4.8,
        reviewCount: 124,
        cleanliness: 4.6,
        equipment: 4.4,
        staff: 4.5,
        value: 4.3,
        reviews: [
            {
                user: "Pradeep Kumar Singh",
                avatar: "https://randomuser.me/api/portraits/men/32.jpg",
                rating: 5,
                date: "2 days ago",
                title: "Perfect for our wedding!",
                comment: "The function hall was absolutely perfect for our wedding reception. The staff went above and beyond to make our day special.",
                cleanliness: 5,
                equipment: 5,
                staff: 5,
                value: 4,
                photos: [
                    "https://images.unsplash.com/photo-1561484930-974554019ade?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80",
                    "https://images.unsplash.com/photo-1511795409834-ef04bbd61622?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2069&q=80"
                ]
            },
            {
                user: "Anjali Sharma",
                avatar: "https://randomuser.me/api/portraits/women/44.jpg",
                rating: 4,
                date: "1 week ago",
                title: "Great venue for corporate events",
                comment: "We hosted our annual conference here and everything was excellent. The sound system could use an upgrade though.",
                cleanliness: 5,
                equipment: 4,
                staff: 5,
                value: 4,
                photos: [
                    "https://images.unsplash.com/photo-1492684223066-81342ee5ff30?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80"
                ]
            }
        ]
    },
    2: { // Sports Court
        name: "Sports Court",
        overallRating: 4.6,
        reviewCount: 87,
        cleanliness: 4.5,
        equipment: 4.3,
        staff: 4.4,
        value: 4.7,
        reviews: [
            {
                user: "Rahul Mehta",
                avatar: "https://randomuser.me/api/portraits/men/22.jpg",
                rating: 5,
                date: "3 days ago",
                title: "Best basketball court in town!",
                comment: "The surface is perfect and the hoops are well-maintained. We play here every weekend.",
                cleanliness: 5,
                equipment: 5,
                staff: 4,
                value: 5,
                photos: [
                    "https://images.unsplash.com/photo-1547347298-4074fc3086f0?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80"
                ]
            }
        ]
    },
    3: { // Swimming Pool
        name: "Swimming Pool",
        overallRating: 4.9,
        reviewCount: 156,
        cleanliness: 4.8,
        equipment: 4.7,
        staff: 4.9,
        value: 4.8,
        reviews: [
            {
                user: "Priya Patel",
                avatar: "https://randomuser.me/api/portraits/women/33.jpg",
                rating: 5,
                date: "1 day ago",
                title: "Crystal clear water!",
                comment: "The pool is always clean and well-maintained. Lifeguards are very attentive.",
                cleanliness: 5,
                equipment: 5,
                staff: 5,
                value: 5,
                photos: [
                    "https://images.unsplash.com/photo-1575429198097-0414ec08e8cd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80",
                    "https://images.unsplash.com/photo-1575429198339-9a1c7e7a0a5f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80"
                ]
            }
        ]
    },
    4: { // Gym Facility
        name: "Gym Facility",
        overallRating: 4.7,
        reviewCount: 203,
        cleanliness: 4.6,
        equipment: 4.8,
        staff: 4.7,
        value: 4.5,
        reviews: [
            {
                user: "Vikram Singh",
                avatar: "https://randomuser.me/api/portraits/men/45.jpg",
                rating: 4,
                date: "5 days ago",
                title: "Well-equipped gym",
                comment: "Great variety of equipment but could use more free weights during peak hours.",
                cleanliness: 4,
                equipment: 5,
                staff: 4,
                value: 4,
                photos: [
                    "https://images.unsplash.com/photo-1571902943202-507ec2618e8f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1975&q=80"
                ]
            }
        ]
    }
};

document.addEventListener('DOMContentLoaded', function() {
    // Initialize Swiper with responsive settings
    const swiper = new Swiper('.swiper-container', {
        slidesPerView: 1,
        spaceBetween: 20,
        pagination: {
            el: '.swiper-pagination',
            clickable: true,
        },
        breakpoints: {
            640: {
                slidesPerView: 2,
            },
            768: {
                slidesPerView: 3,
            },
            1024: {
                slidesPerView: 4,
            },
        }
    });

    // Function to update facility details and reviews
    function updateFacilityDetails(facilityId) {
        const facility = facilities[facilityId];
        
        // Update header
        document.querySelector('.selected-facility').textContent = facility.name;
        
        // Update overall rating
        document.querySelector('.rating-number').textContent = facility.overallRating;
        document.querySelector('.rating-count').textContent = `${facility.reviewCount} reviews`;
        
        // Update star display (simple version - in real app you'd calculate exact stars)
        const starDisplay = '★★★★★'.slice(0, Math.floor(facility.overallRating)) + 
                          (facility.overallRating % 1 >= 0.5 ? '☆' : '');
        document.querySelector('.rating-stars').innerHTML = starDisplay;
        
        // Update category ratings
        document.querySelector('.cleanliness-value').textContent = facility.cleanliness;
        document.querySelector('.cleanliness-bar').style.width = `${(facility.cleanliness / 5) * 100}%`;
        
        document.querySelector('.equipment-value').textContent = facility.equipment;
        document.querySelector('.equipment-bar').style.width = `${(facility.equipment / 5) * 100}%`;
        
        document.querySelector('.staff-value').textContent = facility.staff;
        document.querySelector('.staff-bar').style.width = `${(facility.staff / 5) * 100}%`;
        
        document.querySelector('.value-value').textContent = facility.value;
        document.querySelector('.value-bar').style.width = `${(facility.value / 5) * 100}%`;
        
        // Update facility ID in form
        document.getElementById('facilityId').value = facilityId;
        
        // Update reviews
        const reviewsContainer = document.querySelector('.feedback-items-container');
        reviewsContainer.innerHTML = '';
        
        facility.reviews.forEach(review => {
            const reviewItem = document.createElement('div');
            reviewItem.className = 'feedback-item';
            
            // Create star display for review
            const reviewStars = '★★★★★'.slice(0, review.rating) + '☆☆☆☆☆'.slice(review.rating);
            
            // Create category ratings display
            let categoryRatings = '';
            for (const [category, rating] of Object.entries(review)) {
                if (['cleanliness', 'equipment', 'staff', 'value'].includes(category)) {
                    const stars = '★★★★★'.slice(0, rating) + '☆☆☆☆☆'.slice(rating);
                    categoryRatings += `
                        <div class="category-rating-item">
                            <span>${category.charAt(0).toUpperCase() + category.slice(1)}</span>
                            <span class="category-rating-stars">${stars}</span>
                        </div>
                    `;
                }
            }
            
            // Create photos display if they exist
            let photosDisplay = '';
            if (review.photos && review.photos.length > 0) {
                photosDisplay = `<div class="feedback-photos">`;
                review.photos.forEach(photo => {
                    photosDisplay += `<img src="${photo}" alt="Review photo">`;
                });
                photosDisplay += `</div>`;
            }
            
            reviewItem.innerHTML = `
                <div class="user-info">
                    <div class="user-avatar">
                        <img src="${review.avatar}" alt="${review.user}">
                    </div>
                    <div class="user-details">
                        <h4>${review.user}</h4>
                        <div class="review-meta">
                            <span class="review-rating">${reviewStars}</span>
                            <span class="review-date">${review.date}</span>
                        </div>
                    </div>
                </div>
                
                <div class="feedback-content">
                    <h5>${review.title}</h5>
                    <p>${review.comment}</p>
                    
                    <div class="category-ratings-review">
                        ${categoryRatings}
                    </div>
                </div>
                
                ${photosDisplay}
                
                <div class="feedback-actions">
                    <button class="action-button helpful-button">
                        <i class="far fa-thumbs-up"></i> Helpful (0)
                    </button>
                    <button class="action-button reply-button">
                        <i class="far fa-comment"></i> Reply
                    </button>
                </div>
                
                <div class="feedback-reply" style="display: none;">
                    <textarea placeholder="Write a reply..."></textarea>
                    <button class="submit-reply">Post Reply</button>
                </div>
            `;
            
            reviewsContainer.appendChild(reviewItem);
        });
    }

    // Facility selection
    const facilityCards = document.querySelectorAll('.facility-card');
    facilityCards.forEach(card => {
        card.addEventListener('click', function() {
            // Remove active class from all cards
            facilityCards.forEach(c => c.classList.remove('active'));
            
            // Add active class to selected card
            this.classList.add('active');
            
            // Update facility details
            const facilityId = parseInt(this.getAttribute('data-facility-id'));
            updateFacilityDetails(facilityId);
        });
    });

    // Initialize with first facility
    updateFacilityDetails(1);

    // Star rating functionality
    const stars = document.querySelectorAll('.star-rating .star');
    stars.forEach(star => {
        star.addEventListener('click', function() {
            const value = parseInt(this.getAttribute('data-value'));
            const starContainer = this.parentElement;
            
            // Set active class
            stars.forEach(s => {
                s.classList.remove('active');
                if (parseInt(s.getAttribute('data-value')) <= value) {
                    s.classList.add('active');
                }
            });
            
            // Update hidden input
            document.getElementById('overallRating').value = value;
        });
    });

    // Category star rating functionality
    const categoryStars = document.querySelectorAll('.category-stars .cat-star');
    categoryStars.forEach(star => {
        star.addEventListener('click', function() {
            const value = parseInt(this.getAttribute('data-value'));
            const category = this.getAttribute('data-category');
            const starContainer = this.parentElement;
            
            // Set active class for this category
            const categoryStars = starContainer.querySelectorAll('.cat-star');
            categoryStars.forEach(s => {
                s.classList.remove('active');
                if (parseInt(s.getAttribute('data-value')) <= value) {
                    s.classList.add('active');
                }
            });
            
            // Update hidden input
            document.getElementById(`${category}Rating`).value = value;
        });
    });

    // Photo upload functionality
    const uploadTrigger = document.getElementById('uploadTrigger');
    const photoUpload = document.getElementById('photoUpload');
    const uploadPreview = document.getElementById('uploadPreview');

    uploadTrigger.addEventListener('click', function() {
        photoUpload.click();
    });

    photoUpload.addEventListener('change', function(e) {
        uploadPreview.innerHTML = '';
        
        if (this.files) {
            Array.from(this.files).forEach(file => {
                if (file.type.match('image.*')) {
                    const reader = new FileReader();
                    
                    reader.onload = function(e) {
                        const imgContainer = document.createElement('div');
                        imgContainer.className = 'preview-image';
                        imgContainer.style.position = 'relative';
                        imgContainer.style.display = 'inline-block';
                        imgContainer.style.marginRight = '10px';
                        
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.style.width = '100px';
                        img.style.height = '100px';
                        img.style.objectFit = 'cover';
                        img.style.borderRadius = '8px';
                        
                        const removeBtn = document.createElement('span');
                        removeBtn.innerHTML = '&times;';
                        removeBtn.style.position = 'absolute';
                        removeBtn.style.top = '0';
                        removeBtn.style.right = '0';
                        removeBtn.style.background = 'rgba(0,0,0,0.5)';
                        removeBtn.style.color = 'white';
                        removeBtn.style.width = '20px';
                        removeBtn.style.height = '20px';
                        removeBtn.style.borderRadius = '50%';
                        removeBtn.style.display = 'flex';
                        removeBtn.style.alignItems = 'center';
                        removeBtn.style.justifyContent = 'center';
                        removeBtn.style.cursor = 'pointer';
                        removeBtn.style.fontSize = '12px';
                        
                        removeBtn.addEventListener('click', function() {
                            imgContainer.remove();
                        });
                        
                        imgContainer.appendChild(img);
                        imgContainer.appendChild(removeBtn);
                        uploadPreview.appendChild(imgContainer);
                    }
                    
                    reader.readAsDataURL(file);
                }
            });
        }
    });

    // Reply button functionality (delegated event for dynamic content)
    document.querySelector('.feedback-list').addEventListener('click', function(e) {
        if (e.target.closest('.reply-button')) {
            const feedbackItem = e.target.closest('.feedback-item');
            const replySection = feedbackItem.querySelector('.feedback-reply');
            
            if (replySection.style.display === 'block') {
                replySection.style.display = 'none';
            } else {
                replySection.style.display = 'block';
            }
        }
    });

    // Form submission
    const feedbackForm = document.getElementById('feedbackForm');
    if (feedbackForm) {
        feedbackForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Show success modal
            document.getElementById('successModal').style.display = 'flex';
            
            // Reset form
            this.reset();
            uploadPreview.innerHTML = '';
            stars.forEach(star => star.classList.remove('active'));
            categoryStars.forEach(star => star.classList.remove('active'));
        });
    }

    // Modal close functionality
    const modal = document.getElementById('successModal');
    const closeModal = document.querySelector('.close-modal');
    const modalButton = document.querySelector('.modal-button');

    if (closeModal) {
        closeModal.addEventListener('click', function() {
            modal.style.display = 'none';
        });
    }

    if (modalButton) {
        modalButton.addEventListener('click', function() {
            modal.style.display = 'none';
        });
    }

    // Close modal when clicking outside
    window.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.style.display = 'none';
        }
    });

    // Sort reviews functionality
    const sortSelect = document.getElementById('sortReviews');
    if (sortSelect) {
        sortSelect.addEventListener('change', function() {
            const sortValue = this.value;
            const feedbackContainer = document.querySelector('.feedback-items-container');
            const feedbackItems = Array.from(document.querySelectorAll('.feedback-item'));
            
            feedbackItems.sort((a, b) => {
                if (sortValue === 'newest') {
                    return 0; // In real app, you'd compare dates
                } else if (sortValue === 'highest') {
                    const aRating = a.querySelector('.review-rating').textContent.length;
                    const bRating = b.querySelector('.review-rating').textContent.length;
                    return bRating - aRating;
                } else if (sortValue === 'lowest') {
                    const aRating = a.querySelector('.review-rating').textContent.length;
                    const bRating = b.querySelector('.review-rating').textContent.length;
                    return aRating - bRating;
                }
                return 0;
            });
            
            // Re-append sorted items
            feedbackItems.forEach(item => {
                feedbackContainer.appendChild(item);
            });
        });
    }

    // Load more reviews
    const loadMoreBtn = document.querySelector('.load-more-button');
    if (loadMoreBtn) {
        loadMoreBtn.addEventListener('click', function() {
            alert('In a real implementation, this would load more reviews from the server.');
        });
    }
});
</script>