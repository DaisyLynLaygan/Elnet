@model HomeOwner.Models.User
@{
    var user = ViewBag.CurrentUser as User;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - HomeOwner</title>
    <link rel="stylesheet" href="~/css/homeowners/dashboardhomeowners.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
</head>
<body>
<nav class="navbar">
    <!-- Logo -->
    <a href="#" class="logo">
        <img src="~/images/logo.png" alt="Company Logo">
        <span>HomeSphere</span>
    </a>

    <!-- Navigation Links -->
    <ul class="nav-menu">
        <li class="nav-item"><a asp-controller="Homeowner" asp-action="Dashboard" class="nav-link">Home</a></li>
        <li class="nav-item">
            <a asp-controller="Homeowner" asp-action="Feedback" class="nav-link">Feedback</a>
        </li>        
        <li class="nav-item has-dropdown">
            <a href="#" class="nav-link">Billing <span>â–¼</span></a>
            <div class="dropdown-content">
                <a asp-controller="Homeowner" asp-action="Payment" class="dropdown-link">Make Payment</a>
                <a asp-controller="Homeowner" asp-action="History" class="dropdown-link">View History</a>
            </div>
        </li>
        <li class="nav-item">
            <a asp-controller="Homeowner" asp-action="Community" class="nav-link">Community</a>
        </li>
    </ul>

    <!-- User Profile and Hamburger Container -->
    <div class="user-hamburger-container">
        <!-- Hamburger Menu for Mobile -->
        <button class="hamburger" onclick="toggleMenu()">
            <span></span>
            <span></span>
            <span></span>
        </button>

        <!-- User Profile with Dropdown -->
        <div class="user-profile" onclick="toggleProfileDropdown()">
            <span>@user.firstname @user.lastname</span>
            <img src="~/images/user-default-picture.jpg" alt="User profile" />
            <!-- Dropdown Menu -->
            <div class="profile-dropdown">
                <a asp-controller="Homeowner" asp-action="UserProfile" class="dropdown-link">Settings</a>
                <!-- Log Out Form -->
                <form asp-controller="Home" asp-action="LogOut" method="post" class="dropdown-link-form">
                    <button type="submit" class="dropdown-link">Log Out</button>
                </form>
            </div>
        </div>
    </div>
</nav>

<div>
    <main>
        @RenderBody()
    </main>
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>
// Mobile menu toggle
function toggleMenu() {
    const navMenu = document.querySelector('.nav-menu');
    navMenu.classList.toggle('active');
    
    // Toggle hamburger animation
    const hamburger = document.querySelector('.hamburger');
    hamburger.classList.toggle('active');
}

// Profile dropdown toggle
function toggleProfileDropdown() {
    const userProfile = document.querySelector('.user-profile');
    userProfile.classList.toggle('active');
}

// Close profile dropdown when clicking outside
document.addEventListener('click', function (event) {
    const userProfile = document.querySelector('.user-profile');
    if (!userProfile.contains(event.target)) {
        userProfile.classList.remove('active');
    }
});

// Mobile dropdown toggle for billing
document.addEventListener('DOMContentLoaded', function() {
    const billingLink = document.querySelector('.has-dropdown .nav-link');
    const dropdownContent = document.querySelector('.has-dropdown .dropdown-content');
    
    if (window.innerWidth <= 900) {
        billingLink.addEventListener('click', function(e) {
            e.preventDefault();
            dropdownContent.classList.toggle('show');
        });
    }
    
    // Update event listener on window resize
    window.addEventListener('resize', function() {
        if (window.innerWidth <= 900) {
            billingLink.addEventListener('click', function(e) {
                e.preventDefault();
                dropdownContent.classList.toggle('show');
            });
        } else {
            // Clone the element and replace it to remove event listeners
            const newBillingLink = billingLink.cloneNode(true);
            billingLink.parentNode.replaceChild(newBillingLink, billingLink);
        }
    });
});

// Highlight active navigation link based on URL
document.addEventListener('DOMContentLoaded', function () {
    const navLinks = document.querySelectorAll('.nav-menu > .nav-item > .nav-link');
    const currentUrl = window.location.pathname;

    navLinks.forEach(link => {
        const linkHref = link.getAttribute('href');

        if (linkHref === currentUrl) {
            link.classList.add('active');
        }
    });

    navLinks.forEach(link => {
        link.addEventListener('click', () => {
            navLinks.forEach(link => link.classList.remove('active'));
            link.classList.add('active');
        });
    });
});

// Close mobile menu when clicking on a link
document.querySelectorAll('.nav-link:not(.has-dropdown .nav-link), .dropdown-link').forEach(link => {
    link.addEventListener('click', () => {
        if (window.innerWidth <= 900) {
            document.querySelector('.nav-menu').classList.remove('active');
            document.querySelector('.hamburger').classList.remove('active');
        }
    });
});

// Prevent dropdown from disappearing when moving mouse from nav item to dropdown
document.querySelectorAll('.nav-item').forEach(item => {
    const dropdown = item.querySelector('.dropdown-content');
    if (dropdown) {
        // Add mouseenter event to keep dropdown open when hovering over it
        dropdown.addEventListener('mouseenter', () => {
            item.classList.add('hover');
        });
        
        // Add mouseleave event to close dropdown when leaving it
        dropdown.addEventListener('mouseleave', () => {
            item.classList.remove('hover');
            dropdown.style.display = 'none';
        });
        
        // Add mouseenter event to parent item
        item.addEventListener('mouseenter', () => {
            dropdown.style.display = 'block';
        });
        
        // Add mouseleave event to parent item
        item.addEventListener('mouseleave', () => {
            // Only hide if not hovering over dropdown
            if (!item.classList.contains('hover')) {
                dropdown.style.display = 'none';
            }
        });
    }
});

// Highlight today's date and select a date (if applicable)
document.addEventListener('DOMContentLoaded', function () {
    const days = document.querySelectorAll('.day');
    const today = new Date();
    const currentDay = today.getDate();

    // Highlight today's date
    days.forEach(day => {
        if (parseInt(day.textContent) === currentDay) {
            day.classList.add('today');
        }
    });

    // Add click event to select a date
    days.forEach(day => {
        day.addEventListener('click', () => {
            // Remove selected class from all days
            days.forEach(d => d.classList.remove('selected'));

            // Add selected class to the clicked day
            day.classList.add('selected');
        });
    });
});
</script>
</body>
</html>