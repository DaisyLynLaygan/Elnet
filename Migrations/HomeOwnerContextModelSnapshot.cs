// <auto-generated />
using System;
using HomeOwner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeOwner.Migrations
{
    [DbContext(typeof(HomeOwnerContext))]
    partial class HomeOwnerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeOwner.Models.Announcement", b =>
                {
                    b.Property<int>("announcement_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("announcement_id"));

                    b.Property<string>("author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("announcement_id");

                    b.ToTable("Announcement");
                });

            modelBuilder.Entity("HomeOwner.Models.Comment", b =>
                {
                    b.Property<int>("comment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("comment_id"));

                    b.Property<int?>("author_id")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("post_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("datetime2");

                    b.HasKey("comment_id");

                    b.HasIndex("author_id");

                    b.HasIndex("post_id");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("HomeOwner.Models.Document", b =>
                {
                    b.Property<int>("document_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("document_id"));

                    b.Property<bool>("allow_download")
                        .HasColumnType("bit");

                    b.Property<bool>("apply_watermark")
                        .HasColumnType("bit");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("download_count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("expiration_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("file_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("file_size")
                        .HasColumnType("bigint");

                    b.Property<string>("file_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("upload_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("uploader_id")
                        .HasColumnType("int");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("view_count")
                        .HasColumnType("int");

                    b.Property<string>("visibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("document_id");

                    b.HasIndex("uploader_id");

                    b.HasIndex("user_id");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("HomeOwner.Models.Facility", b =>
                {
                    b.Property<int>("facility_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("facility_id"));

                    b.Property<decimal>("cleanliness_rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("equipment_rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("image_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("overall_rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<int>("review_count")
                        .HasColumnType("int");

                    b.Property<decimal>("staff_rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal>("value_rating")
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("facility_id");

                    b.ToTable("Facility");
                });

            modelBuilder.Entity("HomeOwner.Models.FacilityReservation", b =>
                {
                    b.Property<int>("reservation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reservation_id"));

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<int>("duration_hours")
                        .HasColumnType("int");

                    b.Property<int>("facility_id")
                        .HasColumnType("int");

                    b.Property<int>("guest_count")
                        .HasColumnType("int");

                    b.Property<string>("payment_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("reservation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("reservation_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staff_notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("reservation_id");

                    b.HasIndex("facility_id");

                    b.HasIndex("user_id");

                    b.ToTable("FacilityReservation");
                });

            modelBuilder.Entity("HomeOwner.Models.Feedback", b =>
                {
                    b.Property<int>("feedback_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feedback_id"));

                    b.Property<decimal>("cleanliness_rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("equipment_rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<int>("facility_id")
                        .HasColumnType("int");

                    b.Property<decimal>("overall_rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("photos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("staff_rating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<decimal>("value_rating")
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("feedback_id");

                    b.HasIndex("facility_id");

                    b.HasIndex("user_id");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("HomeOwner.Models.Notification", b =>
                {
                    b.Property<int>("notification_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("notification_id"));

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_read")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reference_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("notification_id");

                    b.HasIndex("user_id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("HomeOwner.Models.Post", b =>
                {
                    b.Property<int>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("post_id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("post_id");

                    b.HasIndex("user_id");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("HomeOwner.Models.RentPayment", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("due_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("payment_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transaction_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("payment_id");

                    b.HasIndex("user_id");

                    b.ToTable("RentPayment");
                });

            modelBuilder.Entity("HomeOwner.Models.Report", b =>
                {
                    b.Property<int>("report_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("report_id"));

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("report_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("report_facility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("report_severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("report_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("report_id");

                    b.HasIndex("user_id");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("HomeOwner.Models.ServiceRequest", b =>
                {
                    b.Property<int>("request_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("request_id"));

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<string>("frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payment_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("scheduled_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("scheduled_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("service_icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("service_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staffNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("request_id");

                    b.HasIndex("user_id");

                    b.ToTable("ServiceRequest");
                });

            modelBuilder.Entity("HomeOwner.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("date_created")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HomeOwner.Models.Comment", b =>
                {
                    b.HasOne("HomeOwner.Models.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("author_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HomeOwner.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("HomeOwner.Models.Document", b =>
                {
                    b.HasOne("HomeOwner.Models.User", "Uploader")
                        .WithMany()
                        .HasForeignKey("uploader_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HomeOwner.Models.User", null)
                        .WithMany("UploadedDocuments")
                        .HasForeignKey("user_id");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("HomeOwner.Models.FacilityReservation", b =>
                {
                    b.HasOne("HomeOwner.Models.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("facility_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HomeOwner.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeOwner.Models.Feedback", b =>
                {
                    b.HasOne("HomeOwner.Models.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("facility_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeOwner.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeOwner.Models.Notification", b =>
                {
                    b.HasOne("HomeOwner.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeOwner.Models.Post", b =>
                {
                    b.HasOne("HomeOwner.Models.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HomeOwner.Models.RentPayment", b =>
                {
                    b.HasOne("HomeOwner.Models.User", "HomeOwner")
                        .WithMany("RentPayments")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HomeOwner");
                });

            modelBuilder.Entity("HomeOwner.Models.Report", b =>
                {
                    b.HasOne("HomeOwner.Models.User", "Author")
                        .WithMany("Reports")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HomeOwner.Models.ServiceRequest", b =>
                {
                    b.HasOne("HomeOwner.Models.User", "User")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeOwner.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("HomeOwner.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Notifications");

                    b.Navigation("Posts");

                    b.Navigation("RentPayments");

                    b.Navigation("Reports");

                    b.Navigation("ServiceRequests");

                    b.Navigation("UploadedDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
